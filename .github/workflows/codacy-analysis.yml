name: Codacy Analysis

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  actionlint:
    name: Lint workflows
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run actionlint
        uses: docker://ghcr.io/rhysd/actionlint:latest

  codacy-cli:
    name: Run Codacy CLI
    runs-on: ubuntu-latest
    needs:
      - actionlint
    permissions:
      contents: read
      security-events: write
    env:
      CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure Codacy tokens are present
        run: |
          if [ -z "${CODACY_API_TOKEN:-}" ]; then
            echo "CODACY_API_TOKEN is required" >&2
            exit 1
          fi
          echo "CODACY_ACCOUNT_TOKEN=${CODACY_API_TOKEN}" >> "$GITHUB_ENV"
          if [ -n "${CODACY_PROJECT_TOKEN:-}" ]; then
            echo "CODACY_PROJECT_TOKEN=${CODACY_PROJECT_TOKEN}" >> "$GITHUB_ENV"
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Enable pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.13.1 --activate

      - name: Resolve pnpm store directory
        id: pnpm-store
        run: echo "path=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download Codacy CLI
        run: ./.codacy/cli.sh download

      - name: Run Codacy analysis
        run: ./.codacy/cli.sh analyze --format sarif --output codacy-results.sarif

      - name: Upload Codacy SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: codacy-results.sarif

      - name: Upload SARIF artifact
        uses: actions/upload-artifact@v4
        with:
          name: codacy-results
          path: codacy-results.sarif
          retention-days: 7
